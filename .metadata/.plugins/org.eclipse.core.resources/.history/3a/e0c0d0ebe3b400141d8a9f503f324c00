package core.JUnitParameterization40;

import static org.junit.Assert.assertEquals;

import java.util.Arrays;
import java.util.Collection;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameter;
import org.junit.runners.Parameterized.Parameters;

import junit.framework.TestCase;

@RunWith(Parameterized.class)
public class PrimeNumberCheckerTest  {

	 private PrimeNumberChecker pn;
	 @Before
	        public void initialize() {
	 
	              pn = new PrimeNumberChecker();
	 
	        }
	        @Parameter(value = 0)
	 
	        public Integer inputNumber;
	        @Parameter(value = 1)
	 
	        public Boolean expectedResult;
	 
	        @Parameters(name = "Iteration # {index}: Number: {0}; isPrime? {1}")
	 
	        public static Collection<Object[]> primeNumbers() {
	 
	              Object[][] data = new Object[][] {
	 
	                            { 1, true },
	 
	                            { 2, true },
	 
	                            { 6, false },
	 
	                            { 19, true },
	 
	                            { 22, false }
	                            
	                            
	                            1
	                            2
	                            3
	                            5
	                            7
	                            11
	                            13
	                            17
	                            19
	                            23
	                            29
	                            31
	                            37
	                            41
	                            43
	                            47
	                            53
	                            59
	                            61
	                            67
	                            71
	                            73
	                            79
	                            83
	                            89
	                            97
	                            101
	                            103
	                            107
	                            109
	                            113
	                            127
	                            131
	                            137
	                            139
	                            149
	                            151
	                            157
	                            163
	                            167
	                            173
	                            179
	                            181
	                            191
	                            193
	                            197
	                            199
	                            211
	                            223
	                            227
	                            229
	                            233
	                            239
	                            241
	                            251
	                            257
	                            263
	                            269
	                            271
	                            277
	                            281
	                            283
	                            293
	                            307
	                            311
	                            313
	                            317
	                            331
	                            337
	                            347
	                            349
	                            353
	                            359
	                            367
	                            373
	                            379
	                            383
	                            389
	                            397
	                            401
	                            409
	                            419
	                            421
	                            431
	                            433
	                            439
	                            443
	                            449
	                            457
	                            461
	                            463
	                            467
	                            479
	                            487
	                            491
	                            499
	                            503
	                            509
	                            521
	                            523
	                            
	                            
	                            
	                            
	 
	                            }; return Arrays.asList(data);
	 
	        }
	  @Test
	 
	        public void testPrimeNumberChecker() {
	 
	        System.out.println("Is " + inputNumber + " a prime number? - " + expectedResult);
	 
	        assertEquals(expectedResult, pn.validate(inputNumber));
	 
	        }

}
